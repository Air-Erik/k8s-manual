#cloud-config
# Cloud-init –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Control Plane –Ω–æ–¥
# –ê–≤—Ç–æ—Ä: AI-–∞–≥–µ–Ω—Ç VM Preparation Specialist
# –î–∞—Ç–∞: 2025-01-27
# –í–µ—Ä—Å–∏—è: 1.0

# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
hostname: ${hostname}
fqdn: ${hostname}.${domain}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
users:
  - name: k8s-admin
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    groups: [adm, systemd-journal, docker]
    ssh_authorized_keys:
      - ${ssh_public_key}
    home: /home/k8s-admin
    create_home: true

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ SSH
ssh_pwauth: false
disable_root: true
ssh_deletekeys: true
ssh_genkeytypes: ['rsa', 'ecdsa', 'ed25519']

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏
network:
  config: disabled

# –§–∞–π–ª—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
write_files:
  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ IP
  - path: /etc/netplan/01-static-ip.yaml
    content: |
      network:
        version: 2
        ethernets:
          ens192:
            addresses: [${ip_address}/${subnet_mask}]
            gateway4: ${gateway}
            nameservers:
              addresses: [${dns_servers}]
            dhcp4: false
            dhcp6: false
    permissions: '0644'
    owner: root:root

  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ kubelet –¥–ª—è containerd
  - path: /etc/default/kubelet
    content: |
      KUBELET_EXTRA_ARGS="--container-runtime=remote --container-runtime-endpoint=unix:///var/run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service"
    permissions: '0644'
    owner: root:root

  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ containerd
  - path: /etc/containerd/config.toml
    content: |
      version = 2
      root = "/var/lib/containerd"
      state = "/run/containerd"

      [grpc]
        address = "/run/containerd/containerd.sock"
        uid = 0
        gid = 0

      [ttrpc]
        address = "/run/containerd/containerd.sock.ttrpc"
        uid = 0
        gid = 0

      [debug]
        address = ""
        uid = 0
        gid = 0
        level = ""

      [metrics]
        address = ""
        grpc_histogram = false

      [cgroup]
        path = ""

      [timeouts]
        "io.containerd.timeout.shim.cleanup" = "5s"
        "io.containerd.timeout.shim.load" = "5s"
        "io.containerd.timeout.shim.shutdown" = "3s"
        "io.containerd.timeout.task.state" = "2s"

      [plugins]
        [plugins."io.containerd.gc.v1.scheduler"]
          pause_threshold = 0.02
          deletion_threshold = 0
          mutation_threshold = 100
          schedule_delay = "0s"
          startup_delay = "100ms"
        [plugins."io.containerd.grpc.v1.cri"]
          disable_tcp_service = true
          stream_server_address = "127.0.0.1"
          stream_server_port = "0"
          stream_idle_timeout = "4h0m0s"
          enable_selinux = false
          selinux_category_range = 1024
          sandbox_image = "registry.k8s.io/pause:3.9"
          stats_collect_period = 10
          systemd_cgroup = true
          enable_tls_streaming = false
          max_container_log_line_size = 16384
          disable_cgroup = false
          disable_apparmor = false
          restrict_oom_score_adj = false
          max_concurrent_downloads = 3
          disable_proc_mount = false
          unset_seccomp_profile = ""
          tolerate_missing_hugetlb_controller = true
          disable_hugetlb_controller = true
          ignore_image_defined_volumes = false
          [plugins."io.containerd.grpc.v1.cri".containerd]
            snapshotter = "overlayfs"
            default_runtime_name = "runc"
            no_pivot = false
            disable_snapshot_annotations = true
            discard_unpacked_layers = false
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                runtime_type = "io.containerd.runc.v2"
                runtime_engine = ""
                runtime_root = ""
                privileged_without_host_devices = false
                base_runtime_spec = ""
                [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                  BinaryName = "runc"
                  Root = ""
                  CriuImagePath = ""
                  CriuPath = ""
                  CriuWorkPath = ""
                  SystemdCgroup = true
        [plugins."io.containerd.internal.v1.opt"]
          path = "/var/lib/containerd/io.containerd.internal.v1.opt"
        [plugins."io.containerd.internal.v1.restart"]
          interval = "10s"
        [plugins."io.containerd.metadata.v1.bolt"]
          content_sharing_policy = "shared"
        [plugins."io.containerd.monitor.v1.cgroups"]
          no_prometheus = false
        [plugins."io.containerd.runtime.v1.linux"]
          shim = "containerd-shim"
          runtime = "runc"
          runtime_root = ""
          no_shim = false
          shim_debug = false
        [plugins."io.containerd.runtime.v2.task"]
          platforms = ["linux/amd64"]
        [plugins."io.containerd.service.v1.diff-service"]
          default = ["walking"]
        [plugins."io.containerd.snapshotter.v1.devmapper"]
          root_path = ""
          pool_name = ""
          base_image_size = ""
          async_remove = false
    permissions: '0644'
    owner: root:root

  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ sysctl –¥–ª—è Kubernetes
  - path: /etc/sysctl.d/99-kubernetes.conf
    content: |
      # IP forwarding –¥–ª—è pod networking
      net.ipv4.ip_forward = 1
      net.ipv6.conf.all.forwarding = 1

      # Bridge netfilter –¥–ª—è CNI
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1

      # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      net.core.somaxconn = 32768
      net.core.netdev_max_backlog = 5000
      net.ipv4.tcp_max_syn_backlog = 8192
    permissions: '0644'
    owner: root:root

  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª–µ–π —è–¥—Ä–∞
  - path: /etc/modules-load.d/kubernetes.conf
    content: |
      overlay
      br_netfilter
    permissions: '0644'
    owner: root:root

  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ timezone
  - path: /etc/timezone
    content: |
      UTC
    permissions: '0644'
    owner: root:root

  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall –¥–ª—è Control Plane
  - path: /etc/ufw/before.rules
    content: |
      # Kubernetes Control Plane ports
      -A ufw-before-input -p tcp --dport 6443 -j ACCEPT
      -A ufw-before-input -p tcp --dport 2379:2380 -j ACCEPT
      -A ufw-before-input -p tcp --dport 10250 -j ACCEPT
      -A ufw-before-input -p tcp --dport 10251 -j ACCEPT
      -A ufw-before-input -p tcp --dport 10252 -j ACCEPT
      -A ufw-before-input -p tcp --dport 10259 -j ACCEPT
      -A ufw-before-input -p tcp --dport 10257 -j ACCEPT
    permissions: '0644'
    owner: root:root

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
runcmd:
  # –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  - netplan apply

  # –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª–∏ —è–¥—Ä–∞
  - modprobe overlay
  - modprobe br_netfilter

  # –ü—Ä–∏–º–µ–Ω–∏—Ç—å sysctl –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  - sysctl --system

  # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å timezone
  - timedatectl set-timezone UTC

  # –í–∫–ª—é—á–∏—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å containerd
  - systemctl enable containerd
  - systemctl start containerd

  # –í–∫–ª—é—á–∏—Ç—å kubelet (–Ω–æ –Ω–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –¥–æ kubeadm init)
  - systemctl enable kubelet

  # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å systemd
  - systemctl daemon-reload

  # –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –ø–∞–∫–µ—Ç–æ–≤
  - apt clean

  # –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è SSH –∫–ª—é—á–µ–π
  - mkdir -p /home/k8s-admin/.ssh
  - chmod 700 /home/k8s-admin/.ssh
  - chown k8s-admin:k8s-admin /home/k8s-admin/.ssh

  # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å firewall –¥–ª—è Control Plane
  - ufw --force enable
  - ufw allow ssh
  - ufw allow 6443/tcp
  - ufw allow 2379:2380/tcp
  - ufw allow 10250/tcp
  - ufw allow 10251/tcp
  - ufw allow 10252/tcp
  - ufw allow 10259/tcp
  - ufw allow 10257/tcp

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
cloud_init_modules:
  - migrator
  - seed_random
  - bootcmd
  - write-files
  - growpart
  - resizefs
  - disk_setup
  - mounts
  - set-passwords
  - ssh

cloud_final_modules:
  - package-update-upgrade-install
  - runcmd
  - byobu
  - landscape
  - lxd
  - puppet
  - chef
  - salt-minion
  - mcollective
  - disable-ec2-metadata
  - final-message
  - power-state-change

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
final_message: |
  ==========================================
  üéâ Kubernetes Control Plane VM –≥–æ—Ç–æ–≤–∞!
  ==========================================

  –•–æ—Å—Ç: ${hostname}
  IP: ${ip_address}
  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: k8s-admin

  –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
  1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: ssh k8s-admin@${ip_address}
  2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞—Å—Ç–µ—Ä: kubeadm init --control-plane-endpoint=${api_vip}
  3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å kubeconfig: mkdir -p ~/.kube && cp /etc/kubernetes/admin.conf ~/.kube/config
  4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å CNI: kubectl apply -f <cni-manifest>

  ==========================================

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
package_update: false
package_upgrade: false
package_reboot_if_required: false

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è snap
snap:
  commands:
    - snap refresh --time
    - snap set system refresh.timer=fri,5:00-9:00
    - snap set system refresh.hold="$(date --date='next Friday 5:00' --iso-8601=seconds)"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
apt:
  sources:
    kubernetes:
      source: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /"
      keyid: "B53DC80D13EDEF05"
  packages:
    - kubelet=1.31.2-1.1
    - kubeadm=1.31.2-1.1
    - kubectl=1.31.2-1.1
  conf: |
    APT {
      Get {
        Assume-Yes "true";
        Fix-Broken "true";
      };
    }
